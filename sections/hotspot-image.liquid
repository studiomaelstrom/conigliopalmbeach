{% schema %}
{
  "name": "Hotspot Image",
  "settings": [
    {
      "type": "text",
      "id": "image",
      "label": "Image URL"
    },
    {
      "type": "color",
      "id": "hotspot_color",
      "label": "Hotspot Color",
      "default": "#F47722"
    },
    {
      "type": "color",
      "id": "hotspot_inner",
      "label": "Hotspot Inner Color",
      "default": "#FFF"
    },
    {
      "type": "text",
      "id": "bg",
      "label": "Background Image URL (Optional)"
    },
    {
      "type": "range",
      "id": "margins",
      "min": 0,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Margins",
      "default": 50
    }
  ],
  "blocks": [
    {
      "type": "hotspot",
      "name": "Hotspot",
      "settings": [
        {
          "type": "text",
          "id": "hotspot_content",
          "label": "Hotspot Content",
          "default": "Product Info Here"
        },
        {
          "type": "range",
          "id": "top",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Top",
          "default": 50
        },
        {
          "type": "range",
          "id": "left",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "Left",
          "default": 50
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image with Hotspots",
      "category": "Image with hotspots"
    }
  ]
}
{% endschema %}

{%- style -%}
            .section-{{ section.id }}-padding {
              padding-top: calc({{ section.settings.padding_top }}px * 0.75);
              padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
            }

            @media screen and (min-width: 750px) {
              .section-{{ section.id }}-padding {
                padding-top: {{ section.settings.padding_top }}px;
                padding-bottom: {{ section.settings.padding_bottom }}px;
              }
            }

            .hotspots--wrapper {
              position: relative;
              margin: auto;
            }

            .hotspots--figure {
              width: 100%;
            }

            .hotspot {
              position: absolute;
              display: block;
            }

            .hotspot--cta {
              position: relative;
              float: right;
              display: inline-block;
              width: 30px;
              height: 30px;
              border-radius: 50%;
              background: {{section.settings.hotspot_color}};
              transition: all cubic-bezier(0.8, 0, 0.2, 1) 0.4s;
            }

            .hotspot--cta::after {
              content: "";
              position: absolute;
              left: 0;
              top: 0;
              bottom: 0;
              right: 0;
              margin: auto;
              width: 10px;
              height: 10px;
              border-radius: 50%;
              background: {{section.settings.hotspot_inner}};
              z-index: 2;
              transition: opacity 0.6s;
              animation: pulse 1.5s cubic-bezier(0.8, 0, 0.2, 1) 0s infinite;
            }

            .hotspot:hover .hotspot--cta {
              transform: scale(0.6);
            }

            .hotspot:hover .hotspot--cta:after {
              opacity: 0;
            }

            @keyframes pulse {
              0% {
                transform: scale(0.4);
              }
              33% {
                transform: scale(1);
              }
              66% {
                transform: scale(0.4);
              }
              100% {
                transform: scale(0.4);
              }
            }

            @media screen and (max-width: 420px) {
              .hotspot--cta {
                width: 20px;
                height: 20px;
              }
              .hotspot--cta::after {
                width: 5px;
                height: 5px;
              }
            }

              {%- for block in section.blocks -%}
                {%- assign hotspot_position = '#hotspot-' | append: block.id -%}
                {{ hotspot_position }}{
                  top: {{ block.settings.top }}%;
                  left: {{ block.settings.left }}%;
                }

          {%- assign info_position = '#info-' | append: block.id -%}
                {{ info_position }}{
                  top: {{ block.settings.itop }}%;
                  left: {{ block.settings.ileft }}%;
                }
              {%- endfor -%}

          .hotspot-background {
            flex: 0 0 auto;
            width: 95%;
            display: flex;
            align-self: center;
            align-items: center;
            margin-left:auto;
            margin-right:auto;
            flex-direction: column;
            justify-content: center;
          }


      .hotspot--popup {
      display: none;
      position: absolute;
      background-color: white;
      padding: 10px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0,0,0,0.5);
      z-index: 10;
      width:400px;
      margin-bottom:100px!important;
      /* Adjust width, max-width, etc., as needed */
    }

    @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .fade-in {
    animation: fadeIn 0.5s ease-out forwards;
  }
{%- endstyle -%}
<div
  class="hotspot-background"
  style="
    margin-top: {{ section.settings.margins }}px;
    margin-bottom: {{ section.settings.margins }}px;
    {% if section.settings.bg != blank %}
     background-size: cover;
    background-image: url('{{ section.settings.bg }}');
    {% else %}
      background-image: none;
    {% endif %}
  "
>
  <div class="section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }}">
    <div class="page-width">
      <section class="hotspots--wrapper">
        <img
          src="{{ section.settings.image }}"
          alt=""
          class="hotspots--figure"
        >

        {%- for block in section.blocks -%}
          <div
            class="hotspot"
            id="hotspot-{{ block.id }}"
            style="top: {{ block.settings.top }}%; left: {{ block.settings.left }}%;"
          >
            <span class="hotspot--cta"></span>
            <div class="hotspot--popup" id="popup-{{ block.id }}">
              {{ block.settings.hotspot_content }}
            </div>
          </div>
        {%- endfor -%}
      </section>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const hotspots = document.querySelectorAll('.hotspot');
    const popups = document.querySelectorAll('.hotspot--popup');

    function closeAllPopups() {
      popups.forEach(function(popup) {
        popup.style.display = 'none';
        popup.classList.remove('fade-in'); // Ensure to remove the class when hiding
      });
    }

    hotspots.forEach(hotspot => {
      hotspot.addEventListener('click', function(event) {
        event.stopPropagation(); // Prevent click from immediately propagating to document
        const popup = this.querySelector('.hotspot--popup');

        // Close all popups first
        closeAllPopups();

        // Then open the clicked hotspot's popup and add the fade-in class
        popup.style.display = 'block';
        popup.classList.add('fade-in');
      });
    });

    document.addEventListener('click', function(event) {
      const isClickInsideHotspot = event.target.closest('.hotspot');
      if (!isClickInsideHotspot) {
        closeAllPopups();
      }
    });

    // Prevent popup from closing when clicking inside it
    popups.forEach(popup => {
      popup.addEventListener('click', function(event) {
        event.stopPropagation();
      });
    });
  });
</script>
